#!/bin/bash

mkdir $1

echo '#include <stdlib.h>
#include <stdio.h>

int main(void) {

    return EXIT_SUCCESS;
}' > $1/$1.c

echo 'cmake_minimum_required(VERSION 3.14)

project ('$1' LANGUAGES C)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "Debug")
endif()

set(CMAKE_EXPORT_COMPILE_COMMANDS 1) # for clangd intergation

set(CMAKE_C_FLAGS_DEBUG "-O0 -ggdb3")
set(CMAKE_C_FLAGS_RELEASE "-O3")

if(CMAKE_C_COMPILER_ID MATCHES GNU)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra")
endif()

if(CMAKE_C_COMPILER_ID MATCHES Clang)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Weverything -Wno-vla -Wno-declaration-after-statement")
endif()

add_subdirectory(src)
add_subdirectory(test)

add_executable(${PROJECT_NAME} ${PROJECT_NAME}.c)
target_link_libraries(${PROJECT_NAME} PRIVATE ${PROJECT_NAME}-lib)

enable_testing()

add_test(
    NAME ${PROJECT_NAME}_test
    COMMAND ${PROJECT_NAME}_test
    )' > $1/CMakeLists.txt

mkdir $1/build
mkdir $1/src
mkdir $1/test

echo 'add_library(${PROJECT_NAME}-lib STATIC)

target_sources(${PROJECT_NAME}-lib
    PUBLIC
        lib.h
    PRIVATE
        lib.c
    )' > $1/src/CMakeLists.txt

echo '#ifndef LIB_H
#define LIB_H



#endif' > $1/src/lib.h

echo '#include "lib.h"' > $1/src/lib.c

echo 'add_executable(${PROJECT_NAME}_test ${PROJECT_NAME}_test.c)
target_link_libraries(${PROJECT_NAME}_test PUBLIC ${PROJECT_NAME}-lib)' > $1/test/CMakeLists.txt

echo '#include <assert.h>
#include <stdlib.h>

int main(void) {

    return EXIT_SUCCESS;
}' > $1/test/$1_test.c

git init $1

echo 'build/' > $1/.gitignore
